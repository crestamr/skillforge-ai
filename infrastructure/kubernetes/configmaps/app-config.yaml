apiVersion: v1
kind: ConfigMap
metadata:
  name: skillforge-ai-config
  namespace: skillforge-ai
  labels:
    app.kubernetes.io/name: skillforge-ai
    app.kubernetes.io/component: config
data:
  # Application Configuration
  APP_NAME: "SkillForge AI"
  APP_VERSION: "1.0.0"
  LOG_LEVEL: "INFO"
  
  # API Configuration
  API_VERSION: "v1"
  API_PREFIX: "/api/v1"
  
  # Frontend Configuration
  NEXT_PUBLIC_APP_NAME: "SkillForge AI"
  NEXT_PUBLIC_API_URL: "https://api.skillforge.ai"
  NEXT_PUBLIC_AI_SERVICES_URL: "https://ai.skillforge.ai"
  
  # AI Services Configuration
  AI_MODEL_CACHE_SIZE: "1000"
  AI_MODEL_TIMEOUT: "30"
  AI_BATCH_SIZE: "32"
  
  # Job Matching Configuration
  JOB_MATCHING_THRESHOLD: "0.7"
  SKILL_SIMILARITY_THRESHOLD: "0.8"
  
  # Cache Configuration
  CACHE_TTL: "3600"
  CACHE_MAX_SIZE: "10000"
  
  # Rate Limiting
  RATE_LIMIT_REQUESTS: "100"
  RATE_LIMIT_WINDOW: "60"
  
  # Monitoring
  METRICS_ENABLED: "true"
  HEALTH_CHECK_INTERVAL: "30"
  
  # Feature Flags
  FEATURE_AI_SERVICES: "true"
  FEATURE_JOB_MATCHING: "true"
  FEATURE_CHAT_SERVICE: "true"
  FEATURE_ANALYTICS: "true"
  FEATURE_NOTIFICATIONS: "true"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: skillforge-ai-database-config
  namespace: skillforge-ai
  labels:
    app.kubernetes.io/name: skillforge-ai
    app.kubernetes.io/component: database-config
data:
  # PostgreSQL Configuration
  POSTGRES_DB: "skillforge"
  POSTGRES_PORT: "5432"
  POSTGRES_MAX_CONNECTIONS: "100"
  POSTGRES_POOL_SIZE: "20"
  
  # Redis Configuration
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  REDIS_MAX_CONNECTIONS: "50"
  
  # MongoDB Configuration
  MONGODB_PORT: "27017"
  MONGODB_DATABASE: "skillforge"
  MONGODB_MAX_POOL_SIZE: "20"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: skillforge-ai-logging-config
  namespace: skillforge-ai
  labels:
    app.kubernetes.io/name: skillforge-ai
    app.kubernetes.io/component: logging-config
data:
  # Logging Configuration
  logging.conf: |
    [loggers]
    keys=root,skillforge

    [handlers]
    keys=consoleHandler,fileHandler

    [formatters]
    keys=simpleFormatter,jsonFormatter

    [logger_root]
    level=INFO
    handlers=consoleHandler

    [logger_skillforge]
    level=INFO
    handlers=consoleHandler,fileHandler
    qualname=skillforge
    propagate=0

    [handler_consoleHandler]
    class=StreamHandler
    level=INFO
    formatter=jsonFormatter
    args=(sys.stdout,)

    [handler_fileHandler]
    class=FileHandler
    level=INFO
    formatter=jsonFormatter
    args=('/var/log/skillforge/app.log',)

    [formatter_simpleFormatter]
    format=%(asctime)s - %(name)s - %(levelname)s - %(message)s

    [formatter_jsonFormatter]
    format={"timestamp": "%(asctime)s", "logger": "%(name)s", "level": "%(levelname)s", "message": "%(message)s", "module": "%(module)s", "function": "%(funcName)s", "line": %(lineno)d}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: skillforge-ai
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: config
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging format
        log_format json_combined escape=json
        '{'
            '"time_local":"$time_local",'
            '"remote_addr":"$remote_addr",'
            '"remote_user":"$remote_user",'
            '"request":"$request",'
            '"status": "$status",'
            '"body_bytes_sent":"$body_bytes_sent",'
            '"request_time":"$request_time",'
            '"http_referrer":"$http_referer",'
            '"http_user_agent":"$http_user_agent",'
            '"upstream_addr":"$upstream_addr",'
            '"upstream_response_time":"$upstream_response_time"'
        '}';

        access_log /var/log/nginx/access.log json_combined;

        # Performance settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 100M;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

        # Upstream definitions
        upstream frontend {
            server frontend-service:3000;
            keepalive 32;
        }

        upstream backend {
            server backend-service:8000;
            keepalive 32;
        }

        upstream ai-services {
            server ai-services-service:8001;
            keepalive 32;
        }

        # Main server block
        server {
            listen 80;
            server_name _;

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # Frontend routes
            location / {
                proxy_pass http://frontend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }

            # Backend API routes
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # AI services routes
            location /ai/ {
                limit_req zone=api burst=10 nodelay;
                proxy_pass http://ai-services;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_read_timeout 300s;
                proxy_connect_timeout 75s;
            }
        }
    }
