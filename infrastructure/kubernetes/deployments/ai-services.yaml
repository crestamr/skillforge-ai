apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-services
  namespace: skillforge-ai
  labels:
    app.kubernetes.io/name: ai-services
    app.kubernetes.io/component: ai
    app.kubernetes.io/part-of: skillforge-ai-platform
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: ai-services
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ai-services
        app.kubernetes.io/component: ai
        app.kubernetes.io/part-of: skillforge-ai-platform
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: skillforge-ai-ai-services
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      initContainers:
      - name: model-downloader
        image: ghcr.io/skillforge-ai/ai-services:latest
        command: ["python", "scripts/download_models.py"]
        envFrom:
        - configMapRef:
            name: skillforge-ai-config
        - secretRef:
            name: skillforge-ai-secrets
        volumeMounts:
        - name: model-cache
          mountPath: /app/models
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      containers:
      - name: ai-services
        image: ghcr.io/skillforge-ai/ai-services:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8001
          protocol: TCP
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: MODEL_CACHE_DIR
          value: "/app/models"
        - name: WORKERS
          value: "2"
        envFrom:
        - configMapRef:
            name: skillforge-ai-config
        - secretRef:
            name: skillforge-ai-secrets
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: model-cache
          mountPath: /app/models
        - name: logs
          mountPath: /var/log/skillforge
      volumes:
      - name: tmp
        emptyDir: {}
      - name: model-cache
        persistentVolumeClaim:
          claimName: ai-models-pvc
      - name: logs
        emptyDir: {}
      nodeSelector:
        role: ai-workloads
      tolerations:
      - key: "ai-workloads"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - ai-services
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: skillforge-ai-ai-services
  namespace: skillforge-ai
  labels:
    app.kubernetes.io/name: ai-services
    app.kubernetes.io/component: ai

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-models-pvc
  namespace: skillforge-ai
  labels:
    app.kubernetes.io/name: ai-services
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 50Gi

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-services-hpa
  namespace: skillforge-ai
  labels:
    app.kubernetes.io/name: ai-services
    app.kubernetes.io/component: ai
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-services
  minReplicas: 1
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Percent
        value: 25
        periodSeconds: 120
    scaleUp:
      stabilizationWindowSeconds: 120
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
